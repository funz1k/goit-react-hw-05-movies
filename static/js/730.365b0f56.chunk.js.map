{"version":3,"file":"static/js/730.365b0f56.chunk.js","mappings":"uNAGaA,EAAQC,EAAAA,GAAAA,GAAH,8JASLC,EAAOD,EAAAA,GAAAA,GAAH,gTAaJE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kQ,SCDjB,EApBkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACL,EAAD,UAEQG,GAAUA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACjB,UAACR,EAAD,CAEIS,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GAHnB,WAII,gBAAKS,IAAG,0CAAqCL,GAAeM,IAAKL,KACjE,SAACX,EAAD,UAAQW,MAJHF,U,mKCVhBQ,EAAkBhB,EAAAA,GAAAA,KAAH,6IAQfiB,EAAQjB,EAAAA,GAAAA,MAAH,gVAkBLkB,EAASlB,EAAAA,GAAAA,OAAH,wH,SCsBnB,EA1Ce,WACX,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAoB,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcG,IAAI,WAAY,IAE5CC,EAAAA,EAAAA,YAAU,WACQ,KAAVF,IAGJG,EAAAA,EAAAA,IAAUH,GAAOI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,QAClD,CAACL,IAaJ,OACI,iCACI,UAACR,EAAD,CAAiBc,SAbJ,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASX,MAAMY,MAChD,GAA2B,KAAvBH,EAAYI,OAAhB,CAGA,IAAMC,EAAOP,EAAMQ,cACnBhB,EAAgB,CAAEC,MAAOS,IACzBK,EAAKE,UAKD,WACI,SAACvB,EAAD,CACIwB,KAAK,OACLC,KAAK,QACLC,YAAY,mBAEhB,SAACzB,EAAD,CAAQuB,KAAK,SAAb,UACI,SAAC,cAAD,CAAsBL,MAAO,CAAEQ,cAAe,SAAUC,KAAM,IAA9D,UACI,SAAC,MAAD,YAIZ,SAACC,EAAA,EAAD,CAAW1C,OAAQA,S,6KC1CzB2C,EAAS,mCAEFC,EAAM,WACf,OAAOC,IAAAA,IAAA,UAJM,kDAIN,oBACoBF,IACzBnB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,SAGzB,SAASxB,EAAUyB,GACtB,OAAOH,IAAAA,IAAA,4DACkDF,EADlD,kBACkEK,EADlE,+CAELxB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAGzB,SAASE,EAAWC,GACvB,OAAOL,IAAAA,IAAA,6CACmCK,EADnC,oBACsDP,EADtD,oBAELnB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAGzB,SAASI,EAAQD,GACpB,OAAOL,IAAAA,IAAA,6CACmCK,EADnC,4BAC8DP,EAD9D,oBAELnB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC,QAGzB,SAASK,EAAWF,GACvB,OAAOL,IAAAA,IAAA,6CACmCK,EADnC,4BAC8DP,EAD9D,2BAELnB,MAAK,SAAAsB,GAAQ,OAAIA,EAASC","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n\tmin-height: 74px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 28px;\n\ttext-align: center;\n`;\n\nexport const List = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 1em;\n    margin-bottom: 1em;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Item = styled(Link)`\n\twidth: 100%;\n\tcolor: var(--font-colo);\n    box-shadow: 0px 1px 4px -2px rgba(0, 0, 0, 0.1),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\tborder-radius: 3px;\n\t& img {\n\t\twidth: 100%;\n\t}\n`;","\nimport { useLocation } from 'react-router-dom';\nimport { Item, List, Title } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {\n                movies && movies.map(({ id, poster_path, title }) => (\n                    <Item\n                        key={id}\n                        to={`/movies/${id}`}\n                        state={{ from: location }}>\n                        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />\n                        <Title>{title}</Title>\n                    </Item>\n                ))\n            }\n        </List >\n    )\n}\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const SearchContainer = styled.form`\n\tpadding-top: 30px;\n\tpadding-bottom: 30px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const Input = styled.input`\n\tmargin: 0;\n\tpadding: 10px;\n\tmin-width: 300px;\n\theight: 40px;\n\tbackground-color: #fbf9fa3f;\n\tcolor: var(--font-color);\n\tfont-size: 20px;\n\tborder-radius: 5px 0 0 5px;\n\t&:active,\n\t&:focus {\n\t\toutline: 1px solid var(--font-color);\n\t}\n\t&::placeholder {\n\t\tcolor: var(--font-color);\n\t}\n`;\n\nexport const Button = styled.button`\n\theight: 64px;\n\twidth: 64px;\n\tbackground-color: #fbf9fa3f;\n\tborder-radius: 0 5px 5px 0;\n`;\n\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ApiSearch } from 'services/API';\nimport MovieList from \"components/MovieList/MovieList\"\nimport { IconContext } from \"react-icons\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { SearchContainer, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams('');\n    const query = searchParams?.get('query') || '';\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n        ApiSearch(query).then(({ results }) => setMovies(results));\n    }, [query]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const queryString = event.target.elements.query.value;\n        if (queryString.trim() === '') {\n            return;\n        }\n        const form = event.currentTarget;\n        setSearchParams({ query: queryString });\n        form.reset();\n    };\n\n    return (\n        <>\n            <SearchContainer onSubmit={handleSubmit}>\n                <Input\n                    type=\"text\"\n                    name=\"query\"\n                    placeholder=\"Search movies\"\n                />\n                <Button type=\"submit\">\n                    <IconContext.Provider value={{ verticalAlign: 'middle', size: 25 }}>\n                        <FaSearch />\n                    </IconContext.Provider>\n                </Button>\n            </SearchContainer>\n            <MovieList movies={movies} />\n        </>\n    );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst ENDPOINT = 'https://api.themoviedb.org/3/trending/movie/day';\nconst MY_KEY = \"c803001b4c6005c4076c37a3ee0a1f4e\";\n\nexport const Api = () => {\n    return axios.get(\n        `${ENDPOINT}?api_key=${MY_KEY}`\n    ).then(response => response.data)\n};\n\nexport function ApiSearch(searchQuery) {\n    return axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${MY_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n    ).then(response => response.data);\n}\n\nexport function ApiDetails(movieID) {\n    return axios.get(\n        `https://api.themoviedb.org/3/movie/${movieID}?api_key=${MY_KEY}&language=en-US`\n    ).then(response => response.data);\n}\n\nexport function ApiCast(movieID) {\n    return axios.get(\n        `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${MY_KEY}&language=en-US`\n    ).then(response => response.data);\n}\n\nexport function ApiReviews(movieID) {\n    return axios.get(\n        `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${MY_KEY}&language=en-US&page=1`\n    ).then(response => response.data);\n}\n\n"],"names":["Title","styled","List","Item","Link","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","SearchContainer","Input","Button","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","ApiSearch","then","results","onSubmit","event","preventDefault","queryString","target","elements","value","trim","form","currentTarget","reset","type","name","placeholder","verticalAlign","size","MovieList","MY_KEY","Api","axios","response","data","searchQuery","ApiDetails","movieID","ApiCast","ApiReviews"],"sourceRoot":""}